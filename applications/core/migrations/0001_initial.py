# Generated by Django 5.2.1 on 2025-06-16 15:34

import django.core.validators
import django.db.models.deletion
import proy_clinico.util
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ej.: Médico, Enfermero, Administrador', max_length=100, unique=True, verbose_name='Nombre del Cargo')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción breve del rol que cumple este cargo (opcional).', null=True, verbose_name='Descripción del Cargo')),
                ('activo', models.BooleanField(default=True, help_text='Desactiva este cargo si ya no se usa en el sistema.', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Diagnostico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código estándar del diagnóstico (Ej: A09, J00, K35.2)', max_length=20, unique=True, verbose_name='Código del Diagnóstico')),
                ('descripcion', models.CharField(help_text='Nombre del diagnóstico según el código (Ej.: Faringitis aguda)', max_length=100, verbose_name='Descripción del Diagnóstico')),
                ('datos_adicionales', models.TextField(blank=True, help_text='Observaciones clínicas u otra información útil.', null=True, verbose_name='Datos Adicionales')),
                ('activo', models.BooleanField(default=True, help_text='Desactiva este diagnóstico si ya no está en uso.', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Diagnóstico',
                'verbose_name_plural': 'Diagnósticos',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ejemplo: Cardiología, Pediatría, Ginecología', max_length=100, unique=True, verbose_name='Nombre de la Especialidad')),
                ('descripcion', models.TextField(blank=True, help_text='Breve explicación o enfoque de la especialidad (opcional).', null=True, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, help_text='Marcar como inactivo para ocultar esta especialidad en el sistema.', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Especialidad médica',
                'verbose_name_plural': 'Especialidades médicas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='MarcaMedicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre de la marca comercial. Ejemplo: Pfizer, Bayer, Novartis', max_length=100, unique=True, verbose_name='Marca de Medicamento')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción general u observaciones sobre esta marca.', null=True, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Marca de Medicamento',
                'verbose_name_plural': 'Marcas de Medicamentos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoMedicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Ejemplo: Analgésico, Antibiótico, Antiinflamatorio', max_length=100, unique=True, verbose_name='Tipo de Medicamento')),
                ('descripcion', models.TextField(blank=True, help_text='Información adicional sobre este tipo de medicamento.', null=True, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Tipo de Medicamento',
                'verbose_name_plural': 'Tipos de Medicamentos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoSangre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=10, unique=True, verbose_name='Tipo de Sangre')),
                ('descripcion', models.CharField(max_length=100, verbose_name='Descripcion')),
            ],
            options={
                'verbose_name': 'Tipo de Sangre',
                'verbose_name_plural': 'Tipos de Sangre',
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombre del Empleado')),
                ('apellidos', models.CharField(max_length=100, verbose_name='Apellido del Empleado')),
                ('cedula_ecuatoriana', models.CharField(help_text='Ingrese el número de cédula sin espacios ni guiones.', max_length=10, validators=[proy_clinico.util.valida_cedula], verbose_name='Cédula')),
                ('dni', models.CharField(blank=True, help_text='Pasaporte, DNI, CURP u otro documento válido internacionalmente.', max_length=30, null=True, validators=[django.core.validators.RegexValidator(message='Ingrese un documento válido (letras, números, guiones o puntos).', regex='^[A-Za-z0-9\\-\\. ]{5,30}$')], verbose_name='Dni internacional')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('sueldo', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Sueldo')),
                ('fecha_ingreso', models.DateField(verbose_name='Fecha de Ingreso')),
                ('direccion', models.CharField(max_length=255, verbose_name='Dirección')),
                ('latitud', models.FloatField(blank=True, null=True, verbose_name='Latitud')),
                ('longitud', models.FloatField(blank=True, null=True, verbose_name='Longitud')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='empleados/', verbose_name='Foto del Empleado')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cargos', to='core.cargo', verbose_name='Cargo')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'ordering': ['apellidos', 'nombres'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombres')),
                ('apellidos', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('ruc', models.CharField(help_text='Ingrese un RUC válido (persona natural, sociedad o extranjero).', max_length=13, unique=True, validators=[proy_clinico.util.valida_ruc], verbose_name='Ruc')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('direccion', models.CharField(help_text='Ubicación física donde atiende el doctor.', max_length=255, unique=True, verbose_name='Dirección de Trabajo')),
                ('latitud', models.DecimalField(blank=True, decimal_places=6, help_text='Coordenada GPS (opcional).', max_digits=18, null=True, verbose_name='Latitud')),
                ('longitud', models.DecimalField(blank=True, decimal_places=6, help_text='Coordenada GPS (opcional).', max_digits=18, null=True, verbose_name='Longitud')),
                ('codigo_unico_doctor', models.CharField(help_text='Identificador interno único para el doctor.', max_length=20, unique=True, verbose_name='Código Único del Doctor')),
                ('telefonos', models.CharField(help_text='Número de contacto. Puede ser celular o fijo.', max_length=20, verbose_name='Teléfonos')),
                ('email', models.EmailField(blank=True, help_text='Correo de contacto (opcional).', max_length=254, null=True, verbose_name='Correo Electrónico')),
                ('horario_atencion', models.TextField(help_text='Ejemplo: Lunes a Viernes, 08h00 - 13h00', verbose_name='Horario de Atención')),
                ('duracion_cita', models.IntegerField(default=30, help_text='Tiempo estándar asignado a cada paciente.', verbose_name='Duración de Cita (minutos)')),
                ('curriculum', models.FileField(blank=True, help_text='Archivo PDF o DOC (opcional).', null=True, upload_to='curriculums/', verbose_name='Currículum Vitae')),
                ('firma_digital', models.ImageField(blank=True, help_text='Imagen que será usada para firmar digitalmente.', null=True, upload_to='firmas/', verbose_name='Firma Digital')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='doctores/', verbose_name='Foto')),
                ('imagen_receta', models.ImageField(blank=True, help_text='Encabezado o firma que se mostrará en recetas médicas.', null=True, upload_to='recetas/', verbose_name='Imagen para Recetas')),
                ('activo', models.BooleanField(default=True, help_text='Si está desmarcado, el doctor no podrá ser asignado a consultas.', verbose_name='Activo')),
                ('especialidad', models.ManyToManyField(help_text='Seleccione una o más especialidades médicas.', related_name='especialidades', to='core.especialidad', verbose_name='Especialidades')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctores',
                'ordering': ['apellidos', 'nombres'],
            },
        ),
        migrations.CreateModel(
            name='Medicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, help_text='Nombre comercial o genérico. Ejemplo: Ibuprofeno', max_length=100, unique=True, verbose_name='Nombre del Medicamento')),
                ('descripcion', models.TextField(blank=True, help_text='Uso, indicaciones o precauciones relevantes.', null=True, verbose_name='Descripción del Medicamento')),
                ('concentracion', models.CharField(blank=True, help_text='Ejemplo: 500mg, 1g, 5%', max_length=50, null=True, verbose_name='Concentración')),
                ('via_administracion', models.CharField(choices=[('oral', 'Oral'), ('sublingual', 'Sublingual'), ('topica', 'Tópica'), ('inhalatoria', 'Inhalatoria'), ('intravenosa', 'Intravenosa'), ('intramuscular', 'Intramuscular'), ('subcutanea', 'Subcutánea'), ('intratecal', 'Intratecal'), ('intraarticular', 'Intraarticular'), ('rectal', 'Rectal'), ('vaginal', 'Vaginal'), ('oftalmica', 'Oftálmica'), ('otic', 'Ótica'), ('nasal', 'Nasal'), ('otra', 'Otra')], help_text='Forma en que se administra el medicamento (oral, intravenosa, etc.)', max_length=20, verbose_name='Vía de Administración')),
                ('cantidad', models.PositiveIntegerField(help_text='Cantidad actual disponible en inventario.', verbose_name='Stock')),
                ('precio', models.DecimalField(decimal_places=2, help_text='Precio unitario del medicamento.', max_digits=10, verbose_name='Precio')),
                ('comercial', models.BooleanField(default=True, help_text="Marcar como 'No' si es un medicamento genérico.", verbose_name='Comercial')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('marca_medicamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='medicamentos_por_marca', to='core.marcamedicamento', verbose_name='Marca')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='medicamentos_por_tipo', to='core.tipomedicamento', verbose_name='Tipo de Medicamento')),
            ],
            options={
                'verbose_name': 'Medicamento',
                'verbose_name_plural': 'Medicamentos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombres')),
                ('apellidos', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('cedula_ecuatoriana', models.CharField(help_text='Ingrese el número de cédula sin espacios ni guiones.', max_length=10, validators=[proy_clinico.util.valida_cedula], verbose_name='Cédula')),
                ('dni', models.CharField(blank=True, help_text='Pasaporte, DNI, CURP u otro documento válido internacionalmente.', max_length=30, null=True, validators=[django.core.validators.RegexValidator(message='Ingrese un documento válido (letras, números, guiones o puntos).', regex='^[A-Za-z0-9\\-\\. ]{5,30}$')], verbose_name='Dni internacional')),
                ('fecha_nacimiento', models.DateField(help_text='Formato: AAAA-MM-DD', verbose_name='Fecha de Nacimiento')),
                ('telefono', models.CharField(help_text='Puede ingresar uno o más números separados por coma.', max_length=50, verbose_name='Teléfono(s)')),
                ('email', models.EmailField(blank=True, help_text='Correo electrónico del paciente (opcional).', max_length=254, null=True, unique=True, verbose_name='Correo')),
                ('sexo', models.CharField(choices=[('masculino', 'Masculino'), ('femenino', 'Femenino')], max_length=10, verbose_name='Sexo')),
                ('estado_civil', models.CharField(choices=[('soltero', 'Soltero'), ('casado', 'Casado'), ('divorciado', 'Divorciado'), ('viudo', 'Viudo'), ('union_libre', 'Unión libre')], max_length=12, verbose_name='Estado Civil')),
                ('direccion', models.CharField(max_length=255, verbose_name='Dirección Domiciliaria')),
                ('latitud', models.DecimalField(blank=True, decimal_places=6, help_text='Coordenada geográfica (opcional).', max_digits=18, null=True, verbose_name='Latitud')),
                ('longitud', models.DecimalField(blank=True, decimal_places=6, help_text='Coordenada geográfica (opcional).', max_digits=18, null=True, verbose_name='Longitud')),
                ('foto', models.ImageField(blank=True, help_text='Imagen de perfil del paciente (opcional).', null=True, upload_to='pacientes/', verbose_name='Foto')),
                ('antecedentes_personales', models.TextField(blank=True, help_text='Ej.: Diabetes tipo 2, hipertensión, asma, etc.', null=True, verbose_name='Antecedentes personales patológicos')),
                ('antecedentes_quirurgicos', models.TextField(blank=True, help_text='Ej.: Cirugías previas como apendicectomía, cesárea, etc.', null=True, verbose_name='Antecedentes quirúrgicos')),
                ('antecedentes_familiares', models.TextField(blank=True, help_text='Enfermedades hereditarias (padres, abuelos, hermanos).', null=True, verbose_name='Antecedentes familiares')),
                ('alergias', models.TextField(blank=True, help_text='Ej.: Penicilina, mariscos, polvo, etc.', null=True, verbose_name='Alergias')),
                ('medicamentos_actuales', models.TextField(blank=True, help_text='Nombre, dosis y frecuencia. Ej.: Losartán 50mg diario.', null=True, verbose_name='Medicamentos actuales')),
                ('habitos_toxicos', models.CharField(default='ninguno', help_text='Ej.: Tabaco, alcohol, drogas, sedentarismo, etc.', max_length=200, verbose_name='Hábitos tóxicos o perjudiciales')),
                ('vacunas', models.TextField(blank=True, help_text='Vacunas importantes recibidas. Ej.: COVID-19, influenza, etc.', null=True, verbose_name='Vacunas')),
                ('antecedentes_gineco_obstetricos', models.TextField(blank=True, help_text='Solo en mujeres. Ej.: menarquia, embarazos, anticonceptivos.', null=True, verbose_name='Antecedentes gineco-obstétricos')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('tipo_sangre', models.ForeignKey(help_text='Ej.: O+, A-, B+, AB-', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tipos_sangre', to='core.tiposangre', verbose_name='Tipo de Sangre')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'ordering': ['apellidos'],
            },
        ),
    ]
