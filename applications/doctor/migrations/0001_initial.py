# Generated by Django 5.2.1 on 2025-06-28 13:35

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0003_gastomensual_doctor'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiciosAdicionales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_servicio', models.CharField(help_text='Ejemplo: Radiografía, Laboratorio clínico, Procedimiento menor.', max_length=100, unique=True, verbose_name='Nombre del Servicio')),
                ('costo_servicio', models.DecimalField(decimal_places=2, help_text='Costo unitario del servicio en dólares. Ejemplo: 25.00', max_digits=8, verbose_name='Costo del Servicio')),
                ('descripcion', models.TextField(blank=True, help_text='Descripción opcional del servicio. Ejemplo: Examen de sangre de rutina.', null=True, verbose_name='Descripción')),
                ('activo', models.BooleanField(default=True, help_text='Marca si el servicio adicional está disponible para agendar o prescribir.', verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Servicio Adicional',
                'verbose_name_plural': 'Servicios Adicionales',
                'ordering': ['nombre_servicio'],
            },
        ),
        migrations.CreateModel(
            name='Atencion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_atencion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se registró la atención.', verbose_name='Fecha de Atención')),
                ('presion_arterial', models.CharField(blank=True, help_text='Ejemplo: 120/80 mmHg.', max_length=20, null=True, verbose_name='Presión Arterial')),
                ('pulso', models.PositiveIntegerField(blank=True, help_text='Pulsaciones por minuto.', null=True, verbose_name='Pulso (ppm)')),
                ('temperatura', models.DecimalField(blank=True, decimal_places=1, help_text='Temperatura corporal en grados Celsius.', max_digits=4, null=True, verbose_name='Temperatura (°C)')),
                ('frecuencia_respiratoria', models.PositiveIntegerField(blank=True, help_text='Respiraciones por minuto.', null=True, verbose_name='Frecuencia Respiratoria (rpm)')),
                ('saturacion_oxigeno', models.DecimalField(blank=True, decimal_places=2, help_text='Porcentaje de oxígeno en sangre.', max_digits=5, null=True, verbose_name='Saturación de Oxígeno (%)')),
                ('peso', models.DecimalField(blank=True, decimal_places=2, help_text='Peso del paciente en kilogramos.', max_digits=5, null=True, verbose_name='Peso (kg)')),
                ('altura', models.DecimalField(blank=True, decimal_places=2, help_text='Altura del paciente en metros.', max_digits=4, null=True, verbose_name='Altura (m)')),
                ('motivo_consulta', models.TextField(help_text='Razón principal por la que el paciente acude a consulta.', verbose_name='Motivo de Consulta')),
                ('sintomas', models.TextField(help_text='Síntomas que presenta el paciente.', verbose_name='Síntomas')),
                ('tratamiento', models.TextField(help_text='Indicaciones o receta entregada al paciente.', verbose_name='Plan de Tratamiento')),
                ('examen_fisico', models.TextField(blank=True, help_text='Descripción de hallazgos del examen físico.', null=True, verbose_name='Examen Físico')),
                ('examenes_enviados', models.TextField(blank=True, help_text='Exámenes que se han solicitado al paciente.', null=True, verbose_name='Exámenes Solicitados')),
                ('comentario_adicional', models.TextField(blank=True, help_text='Observaciones adicionales del profesional de salud.', null=True, verbose_name='Comentario Adicional')),
                ('es_control', models.BooleanField(default=False, help_text='Marca si esta atención es parte de un seguimiento.', verbose_name='¿Es consulta de control?')),
                ('created_by', models.ForeignKey(help_text='Usuario que registró la atención.', on_delete=django.db.models.deletion.PROTECT, related_name='atenciones_registradas', to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
                ('diagnostico', models.ManyToManyField(help_text='Diagnósticos clínicos asociados a esta atención.', related_name='atenciones', to='core.diagnostico', verbose_name='Diagnósticos')),
                ('doctor', models.ForeignKey(help_text='Doctor que realizó la atención.', on_delete=django.db.models.deletion.PROTECT, related_name='atenciones_realizadas', to='core.doctor', verbose_name='Doctor')),
                ('paciente', models.ForeignKey(help_text='Paciente que recibe esta atención médica.', on_delete=django.db.models.deletion.PROTECT, related_name='atenciones', to='core.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Atención Médica',
                'verbose_name_plural': 'Atenciones Médicas',
                'ordering': ['-fecha_atencion'],
            },
        ),
        migrations.CreateModel(
            name='DetalleAtencion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(help_text='Unidades del medicamento recetadas.', verbose_name='Cantidad')),
                ('prescripcion', models.TextField(help_text='Instrucciones para tomar el medicamento.', verbose_name='Prescripción')),
                ('duracion_tratamiento', models.PositiveIntegerField(blank=True, help_text='Cantidad de días de tratamiento estimado.', null=True, verbose_name='Duración del Tratamiento (días)')),
                ('frecuencia_diaria', models.PositiveIntegerField(blank=True, help_text='Cuántas veces al día debe tomar el medicamento.', null=True, verbose_name='Frecuencia Diaria (veces por día)')),
                ('atencion', models.ForeignKey(help_text='Atención médica asociada a este detalle.', on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='doctor.atencion', verbose_name='Atención Médica')),
                ('medicamento', models.ForeignKey(help_text='Medicamento recetado al paciente.', on_delete=django.db.models.deletion.PROTECT, related_name='prescripciones', to='core.medicamento', verbose_name='Medicamento')),
            ],
            options={
                'verbose_name': 'Detalle de Atención',
                'verbose_name_plural': 'Detalles de Atención',
                'ordering': ['atencion'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPago',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('paypal', 'PayPal'), ('tarjeta', 'Tarjeta de Crédito/Débito'), ('transferencia', 'Transferencia Bancaria')], max_length=20, verbose_name='Método de Pago')),
                ('monto_total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto Total')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('pagado', 'Pagado'), ('cancelado', 'Cancelado'), ('reembolsado', 'Reembolsado')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('fecha_pago', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Pago')),
                ('fecha_creacion', models.DateTimeField(blank=True, editable=False, verbose_name='Fecha de Creación')),
                ('nombre_pagador', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre del Pagador')),
                ('referencia_externa', models.CharField(blank=True, help_text='ID de transacción PayPal, etc.', max_length=100, null=True, verbose_name='Referencia Externa')),
                ('evidencia_pago', models.TextField(blank=True, help_text='Captura de pantalla o comprobante del pago', max_length=100, null=True, verbose_name='Evidencia de Pago')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Actualizado el')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('atencion', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='doctor.atencion', verbose_name='Atención')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
            ],
            options={
                'verbose_name': 'historical Pago',
                'verbose_name_plural': 'historical Pagos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HorarioAtencion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.CharField(choices=[('lunes', 'Lunes'), ('martes', 'Martes'), ('miércoles', 'Miércoles'), ('jueves', 'Jueves'), ('viernes', 'Viernes'), ('sábado', 'Sábado'), ('domingo', 'Domingo')], max_length=10, verbose_name='Día de la Semana')),
                ('hora_inicio', models.TimeField(verbose_name='Hora de Inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora de Fin')),
                ('intervalo_desde', models.TimeField(blank=True, null=True, verbose_name='Intervalo desde')),
                ('intervalo_hasta', models.TimeField(blank=True, null=True, verbose_name='Intervalo hasta')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Horario de Atención',
                'verbose_name_plural': 'Horarios de Atención',
                'unique_together': {('dia_semana', 'hora_inicio', 'hora_fin')},
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metodo_pago', models.CharField(choices=[('efectivo', 'Efectivo'), ('paypal', 'PayPal'), ('tarjeta', 'Tarjeta de Crédito/Débito'), ('transferencia', 'Transferencia Bancaria')], max_length=20, verbose_name='Método de Pago')),
                ('monto_total', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monto Total')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('pagado', 'Pagado'), ('cancelado', 'Cancelado'), ('reembolsado', 'Reembolsado')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('fecha_pago', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Pago')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('nombre_pagador', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre del Pagador')),
                ('referencia_externa', models.CharField(blank=True, help_text='ID de transacción PayPal, etc.', max_length=100, null=True, verbose_name='Referencia Externa')),
                ('evidencia_pago', models.ImageField(blank=True, help_text='Captura de pantalla o comprobante del pago', null=True, upload_to='doctor/evidencia_pagos/', verbose_name='Evidencia de Pago')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('atencion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pagos', to='doctor.atencion', verbose_name='Atención')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pagos_creados', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pagos_actualizados', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalDetallePago',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1, help_text='Cantidad del servicio facturado (ej. 1 examen, 2 procedimientos, etc.).', verbose_name='Cantidad')),
                ('precio_unitario', models.DecimalField(decimal_places=2, help_text='Precio normal por unidad del servicio, sin considerar seguros.', max_digits=10, verbose_name='Precio Unitario')),
                ('subtotal', models.DecimalField(decimal_places=2, editable=False, help_text='Subtotal calculado automáticamente, considerando seguro y descuento.', max_digits=10, verbose_name='Subtotal')),
                ('descuento_porcentaje', models.DecimalField(decimal_places=2, default=0, help_text='Descuento aplicado sobre el precio base. Ejemplo: 10 para 10%.', max_digits=5, verbose_name='Descuento %')),
                ('aplica_seguro', models.BooleanField(default=False, help_text='Marca si el servicio tiene cobertura por seguro médico.', verbose_name='Aplica Seguro')),
                ('valor_seguro', models.DecimalField(blank=True, decimal_places=2, help_text='Valor real cubierto por el seguro. Se usará en lugar del precio normal si se aplica seguro.', max_digits=10, null=True, verbose_name='Valor Cubierto por Seguro')),
                ('descripcion_seguro', models.CharField(blank=True, help_text='Nombre del seguro utilizado. Ejemplo: Saludsa Nivel 2.', max_length=255, null=True, verbose_name='Descripción del Seguro')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Actualizado el')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
                ('pago', models.ForeignKey(blank=True, db_constraint=False, help_text='Pago al que corresponde este detalle de cobro.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='doctor.pago', verbose_name='Pago')),
                ('servicio_adicional', models.ForeignKey(blank=True, db_constraint=False, help_text='Servicio adicional cobrado (ej. Radiografía, Laboratorio).', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='doctor.serviciosadicionales', verbose_name='Servicio')),
            ],
            options={
                'verbose_name': 'historical Detalle de Pago',
                'verbose_name_plural': 'historical Detalles de Pago',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DetallePago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1, help_text='Cantidad del servicio facturado (ej. 1 examen, 2 procedimientos, etc.).', verbose_name='Cantidad')),
                ('precio_unitario', models.DecimalField(decimal_places=2, help_text='Precio normal por unidad del servicio, sin considerar seguros.', max_digits=10, verbose_name='Precio Unitario')),
                ('subtotal', models.DecimalField(decimal_places=2, editable=False, help_text='Subtotal calculado automáticamente, considerando seguro y descuento.', max_digits=10, verbose_name='Subtotal')),
                ('descuento_porcentaje', models.DecimalField(decimal_places=2, default=0, help_text='Descuento aplicado sobre el precio base. Ejemplo: 10 para 10%.', max_digits=5, verbose_name='Descuento %')),
                ('aplica_seguro', models.BooleanField(default=False, help_text='Marca si el servicio tiene cobertura por seguro médico.', verbose_name='Aplica Seguro')),
                ('valor_seguro', models.DecimalField(blank=True, decimal_places=2, help_text='Valor real cubierto por el seguro. Se usará en lugar del precio normal si se aplica seguro.', max_digits=10, null=True, verbose_name='Valor Cubierto por Seguro')),
                ('descripcion_seguro', models.CharField(blank=True, help_text='Nombre del seguro utilizado. Ejemplo: Saludsa Nivel 2.', max_length=255, null=True, verbose_name='Descripción del Seguro')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado el')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='detalles_pago_creados', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='detalles_pago_actualizados', to=settings.AUTH_USER_MODEL, verbose_name='Actualizado por')),
                ('pago', models.ForeignKey(help_text='Pago al que corresponde este detalle de cobro.', on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='doctor.pago', verbose_name='Pago')),
                ('servicio_adicional', models.ForeignKey(help_text='Servicio adicional cobrado (ej. Radiografía, Laboratorio).', on_delete=django.db.models.deletion.PROTECT, related_name='detalles_pago', to='doctor.serviciosadicionales', verbose_name='Servicio')),
            ],
            options={
                'verbose_name': 'Detalle de Pago',
                'verbose_name_plural': 'Detalles de Pago',
            },
        ),
        migrations.CreateModel(
            name='CitaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha de la Cita')),
                ('hora_cita', models.TimeField(verbose_name='Hora de la Cita')),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('ocupado', 'Ocupado'), ('atendido', 'Atendido')], max_length=10, verbose_name='Estado de la Cita')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='core.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Cita Médica',
                'verbose_name_plural': 'Citas Médicas',
                'ordering': ['fecha', 'hora_cita'],
                'indexes': [models.Index(fields=['fecha', 'hora_cita'], name='idx_fecha_hora')],
                'unique_together': {('fecha', 'hora_cita')},
            },
        ),
    ]
